inf = float("inf")

n = int(input())
xy = []
for i in range(n):
  xy.append(list(map(int,input().split())))
# 1

dp = [[0,0] ]*  (n+1)


# dp[i][poz] i個目まで食べ物が出てきて、pozは今、毒状態かどうか　= 食べた料理の美味しさの総和


# 1 毒入りの料理
# 0 下剤入りの料理

# 1. 毒入りの料理を食べるとお腹を壊す
# 2. お腹を壊している時に毒入の料理を食べると死ぬ

# 3. お腹を壊しているときに下剤入りを食べると治る

# 食べるか食べないかを選択できる

for i in range(n):
  x,y = xy[i]
 
  if x == 0:
    # 1. 食べない場合
    # 2. 毒状態でない時に食べる場合
    # 3. 毒状態で食べる場合
    dp[i+1][0] = max(dp[i][0], dp[i][0] + y, dp[i][1] + y)
    # 4. 毒状態で食べない場合
    dp[i+1][1] = dp[i][1]

  if x == 1:
    # 毒状態でない時に食べない場合
    dp[i+1][0] = dp[i][0]
    # 1. 毒状態で食べない場合
    # 2. 毒状でない時に食べる場合
    dp[i+1][1] = max(dp[i][0] + y, dp[i][1])


print(max(dp[-1]))

# 理解度B
# 二次元DP 場合分?
